services:
  postgres:
    image: postgres:16-alpine
    container_name: kuafor-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-kuafor}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-kuafor_pass}
      POSTGRES_DB: ${POSTGRES_DB:-kuafor_db}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-kuafor}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - kuafor_network

  redis:
    image: redis:7-alpine
    container_name: kuafor-redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - kuafor_network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kuafor-app
    ports:
      - "${APP_PORT:-3000}:3000"
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-kuafor}:${POSTGRES_PASSWORD:-kuafor_pass}@postgres:5432/${POSTGRES_DB:-kuafor_db}
      REDIS_URL: redis://redis:6379
      NEXTAUTH_URL: ${NEXTAUTH_URL:-http://localhost:3000}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET:-changeme}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - kuafor_network
    command: sh -c "pnpm prisma migrate deploy && pnpm start"

volumes:
  postgres_data:
  redis_data:

networks:
  kuafor_network:
    driver: bridge
